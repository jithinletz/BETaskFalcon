//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BETaskAPI.DAL.EDMX
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class betaskdbEntities : DbContext
    {
        public betaskdbEntities()
            : base("name=betaskdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<default_values> default_values { get; set; }
        public virtual DbSet<status> status { get; set; }
        public virtual DbSet<user_log> user_log { get; set; }
        public virtual DbSet<customer_division> customer_division { get; set; }
        public virtual DbSet<company> company { get; set; }
        public virtual DbSet<building> building { get; set; }
        public virtual DbSet<route> route { get; set; }
        public virtual DbSet<route_group> route_group { get; set; }
        public virtual DbSet<customer_upload> customer_upload { get; set; }
        public virtual DbSet<document_serial> document_serial { get; set; }
        public virtual DbSet<tax_setting> tax_setting { get; set; }
        public virtual DbSet<uom_setting> uom_setting { get; set; }
        public virtual DbSet<account_ledger> account_ledger { get; set; }
        public virtual DbSet<account_group> account_group { get; set; }
        public virtual DbSet<ledger_mapping> ledger_mapping { get; set; }
        public virtual DbSet<customer_asset> customer_asset { get; set; }
        public virtual DbSet<delivery_item_summary> delivery_item_summary { get; set; }
        public virtual DbSet<delivery_return> delivery_return { get; set; }
        public virtual DbSet<employee> employee { get; set; }
        public virtual DbSet<coupon> coupon { get; set; }
        public virtual DbSet<coupon_leaf> coupon_leaf { get; set; }
        public virtual DbSet<delivery_book> delivery_book { get; set; }
        public virtual DbSet<wallet_history> wallet_history { get; set; }
        public virtual DbSet<item_return_exception> item_return_exception { get; set; }
        public virtual DbSet<item_transaction> item_transaction { get; set; }
        public virtual DbSet<system_settings> system_settings { get; set; }
        public virtual DbSet<account_transaction> account_transaction { get; set; }
        public virtual DbSet<customer_aggrement> customer_aggrement { get; set; }
        public virtual DbSet<daily_collection> daily_collection { get; set; }
        public virtual DbSet<delivery> delivery { get; set; }
        public virtual DbSet<delivery_items> delivery_items { get; set; }
        public virtual DbSet<do_sales> do_sales { get; set; }
        public virtual DbSet<do_sales_item> do_sales_item { get; set; }
        public virtual DbSet<item> item { get; set; }
        public virtual DbSet<sales> sales { get; set; }
        public virtual DbSet<sales_item> sales_item { get; set; }
        public virtual DbSet<customer> customer { get; set; }
    
        public virtual ObjectResult<RPT_ItemDeliverySummary_Result> RPT_ItemDeliverySummary(Nullable<int> employeeId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ItemDeliverySummary_Result>("RPT_ItemDeliverySummary", employeeIdParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<RPT_DailyCollectionSummary_Result> RPT_DailyCollectionSummary(Nullable<int> employeeId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_DailyCollectionSummary_Result>("RPT_DailyCollectionSummary", employeeIdParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<RPT_DailyCollectionDetails_Result> RPT_DailyCollectionDetails(Nullable<int> employeeId, Nullable<System.DateTime> date)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_DailyCollectionDetails_Result>("RPT_DailyCollectionDetails", employeeIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<RPT_DailyCollectionSummaryAllPayments_Result> RPT_DailyCollectionSummaryAllPayments(Nullable<int> employeeId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_DailyCollectionSummaryAllPayments_Result>("RPT_DailyCollectionSummaryAllPayments", employeeIdParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<RPT_DailyCollectionAllPaymentDetails_Result> RPT_DailyCollectionAllPaymentDetails(Nullable<int> employeeId, Nullable<System.DateTime> date)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_DailyCollectionAllPaymentDetails_Result>("RPT_DailyCollectionAllPaymentDetails", employeeIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<RPT_GetAllRouteItemsSummary_Result> RPT_GetAllRouteItemsSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_GetAllRouteItemsSummary_Result>("RPT_GetAllRouteItemsSummary");
        }
    
        public virtual ObjectResult<RPT_GetRouteItemsSummary_Result> RPT_GetRouteItemsSummary(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_GetRouteItemsSummary_Result>("RPT_GetRouteItemsSummary", employeeIdParameter);
        }
    
        public virtual ObjectResult<RPT_ItemDeliveryReturnSummary_Result> RPT_ItemDeliveryReturnSummary(Nullable<int> employeeId, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ItemDeliveryReturnSummary_Result>("RPT_ItemDeliveryReturnSummary", employeeIdParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetCustomerNearest_Result> SP_GetCustomerNearest(Nullable<decimal> lat, Nullable<decimal> lng, Nullable<int> empId)
        {
            var latParameter = lat.HasValue ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(decimal));
    
            var lngParameter = lng.HasValue ?
                new ObjectParameter("lng", lng) :
                new ObjectParameter("lng", typeof(decimal));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("empId", empId) :
                new ObjectParameter("empId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCustomerNearest_Result>("SP_GetCustomerNearest", latParameter, lngParameter, empIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCustomerListByRoute_Result> SP_GetCustomerListByRoute(Nullable<int> routeId)
        {
            var routeIdParameter = routeId.HasValue ?
                new ObjectParameter("routeId", routeId) :
                new ObjectParameter("routeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCustomerListByRoute_Result>("SP_GetCustomerListByRoute", routeIdParameter);
        }
    }
}
